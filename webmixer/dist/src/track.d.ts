import { Parameter } from './parameter';
import { EQ } from './eq';
import { Compressor } from './compressor';
import { GraphicEQ } from './graphiceq';
export declare class Track {
    private mixer;
    name: string;
    channels: number;
    opts: any;
    private _soloMute;
    private _mute;
    private _solo;
    private _in_gain;
    _eq: EQ;
    _compressor: Compressor;
    _graphiceq: GraphicEQ;
    private _pan;
    private _level;
    private soloMuteNode;
    private muteNode;
    private inGainNode;
    private pannerNode;
    private outGainNode;
    constructor(mixer: any, opts: any);
    applyOpts(opts: any): void;
    createNodes(ac: any): void;
    readonly inputNode: GainNode;
    readonly outputNode: GainNode;
    readonly inGain: Parameter;
    applyInGain(): void;
    readonly mute: Parameter;
    applyMute(): void;
    readonly solo: Parameter;
    applySolo(): void;
    readonly soloMute: Parameter;
    applySoloMute(): void;
    readonly eq: EQ;
    readonly compressor: Compressor;
    readonly graphiceq: GraphicEQ;
    readonly pan: Parameter;
    applyPan(): void;
    readonly level: Parameter;
    applyLevel(): void;
}
